variables:
  JACOCO_AR_XML: "$CI_PROJECT_DIR/build/reports/jacoco/test/jacocoTestReport.xml"
  JACOCO_AR_HTML: "$CI_PROJECT_DIR/build/reports/jacoco/test/html/index.html"
  COBERTURA_AR_XML: "$CI_PROJECT_DIR/build/reports/jacoco/cobertura.xml"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: "tcp://docker:2375"

before_script:
  - chmod +x gradlew
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - coverage
  - sonarqube

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build:
  stage: build
  image: gradle:jdk17
  script: ./gradlew build -x test
  artifacts:
    paths:
      - build/libs/*.jar

coverage_total:
  stage: coverage
  coverage: /Total.*?([0-9]{1,3})%/
  script: cat $JACOCO_AR_HTML

coverage:
  stage: coverage
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  script:
    - PROJECT_MODULES=`ls -d $CI_PROJECT_DIR/src/main/java`
    - echo ${PROJECT_MODULES}
    - python /opt/cover2cover.py $JACOCO_AR_XML ${PROJECT_MODULES} > $COBERTURA_AR_XML
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $COBERTURA_AR_XML

test:
  stage: test
  image: gradle:jdk17
  script: ./gradlew test
  artifacts:
    paths:
      - $JACOCO_AR_XML
      - $JACOCO_AR_HTML
  services:
    - name: docker:dind
      command: [ "--tls=false" ]

sonarqube:
  stage: sonarqube
  image: gradle:jdk17
  script: ./gradlew sonar -D sonar.host.url=${SONAR_HOST_URL} -D sonar.login=${SONAR_LOGIN}
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
        - .sonar/cache